#!/bin/bash

# Set the file path for the log file
[ ! -d $HOME/.local/share/logs/ ] && mkdir $HOME/.local/share/logs/
[ ! -f $HOME/.local/share/logs/notify.log ] && touch $HOME/.local/share/logs/notify.log
log=$HOME/.local/share/logs/notify.log

#!/usr/bin/env bash

logfile=$1

#   dbus-monitor "interface='org.freedesktop.Notifications'" |\
#   grep --line-buffered "string" |\
#   grep --line-buffered -e method -e ":" -e '""' -e urgency -e notify -v |\
#   grep --line-buffered '.*(?=string)|(?<=string).*' -oPi |\
#   grep --line-buffered -v "sender-pid" |\
#   grep --line-buffered -v '^\s*$' |\
#   | cat <<< `date`
#xargs -I '{}' echo {} >> "$log"

# Continuously listen for desktop notifications using dbus-monitor
while true; do
  # Get the desktop notifications using dbus-monitor
  notifications=$(dbus-monitor --session "interface='org.freedesktop.Notifications'")

  # Split the notifications into individual lines
  IFS=$'\n' read -d '' -r -a lines <<< "$notifications"

  # Loop through the lines and extract the relevant information
  for line in "${lines[@]}"; do
    # Extract the time, application name, and message
    time=$(echo "$line" | grep "time" | cut -d "," -f 1 | cut -d " " -f 2)
    app=$(echo "$line" | grep "app_name" | cut -d "," -f 2 | cut -d " " -f 2 | tr -d '"')
    message=$(echo "$line" | grep "body" | cut -d "," -f 2 | cut -d " " -f 2 | tr -d '"')

    # Print the notification in the desired format
    echo "$time: $app - $message"
  done

  # Wait for user input (e.g., a key press)
  read -n 1 -s

  # If user input is received, stop the script
  break
done
# Set the dbus-monitor command to listen for notifications
# The '--profile' flag is used to specify the session bus

#   dbus-monitor --profile "interface='org.freedesktop.Notifications',member='MethodCall'" |
#     # While there is input from dbus-monitor, do the following
#     while read -r line; do
#       # If the line contains the string "method call" and "Notify," extract the information from the line
#       if [[ $line = *"method call"* && $line = *"Notify"* ]]; then
#         # Extract the time from the line and remove the seconds
#         time=$(echo "$line" | grep -oP '(?<=time=)\d+')
#         time=$(date -d @"$time" +'%T')
#         # Extract the app name from the line
#         app_name=$(echo "$line" | grep -oP '(?<=app_name=)".*?"' | tr -d '"')
#         # Extract the notification from the line
#         notification=$(echo "$line" | grep -oP '(?<=summary=)".*?"' | tr -d '"')
#         # Extract the urgency level from the line
#         urgency=$(echo "$line" | grep -oP '(?<=urgency=)".*?"' | tr -d '"')
#         # Set the Nerdfont character based on the urgency level
#         case "$urgency" in
#           "low")
#             nerdfont_char=""
#             ;;
#           "normal")
#             nerdfont_char=""
#             ;;
#           "critical")
#             nerdfont_char=""
#             ;;
#           *)
#             nerdfont_char=""
#             ;;
#         esac
#         # Write the notification information to the log file
#         echo "$time - $app_name - $nerdfont_char $notification" >> "$log_file"
#       fi
#     done
