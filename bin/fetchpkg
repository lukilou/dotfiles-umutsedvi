#!/bin/bash 
#******************************************************************************
#
# * File: fetchpkg
#
# * Author:  Umut Sevdi
# * Created: 01/15/23
# * Description: A script that displays available upgrades for the applications on 
# APT and Flatpak.
# It will create a notification if the amount is greater than 5. Clicking to the
# notification will prompt a password to upgrade the applications
# * @require zenity, APT, flatpak
#*****************************************************************************

# Fetch function is run by ../services/fetchpkg.service every 2 hours to fetch
# updated packages
Service() {
    apt-get update
}

Fetch() {
    APT=`apt list --upgradable | tail -n +2 | grep ".*/" -o | tr -d "/"`
    _fp_raw=`flatpak update <<<  no`
    [[ `grep "Nothing to do"  <<< $_fp_raw` ]] && FLATPAK= || \
    FLATPAK=`flatpak update <<<  no | tail -n +4 | head -n -2 | awk '{print $2}'`
    APT_N=$((`wc -l <<< "$APT"` - 1))
    FPK_N=$((`wc -l <<< "$FLATPAK"` - 1 ))
    UPDATE=$(( $FLATPAK_N + $APT_N ))
}

Update() {
    Fetch
    response=$(zenity --forms --title="Package Manager" \
        --text="There are $UPDATE updates available" \
        --add-list="APT($APT_N):" --list-values=`echo  "$APT" | tr " \n" "|"  | rev | cut -c 2- | rev` \
        --add-list="Flatpak($FPK_N):" --list-values=`echo "$FLATPAK" | tr "\n" "|" | rev | cut -c 2- | rev` \
        --add-password="Password")
    password=`echo $response | sed "s/|/\n/g" | tail -n 1`
    if [ -n "$password" ]; then
        echo $password | sudo -S sh -c 'apt upgrade -y' > /tmp/fetchpkg.log
        flatpak update -y >> /tmp/fetchpkg.log
        clicked=`notify-send --app-name="Package Manager" --category="Package Manager" \
            "Package Manager" "$UPDATE packages have been updated." --icon="system-software-install" \
            --action="[ACTION]action"`
        [ "0" = "$clicked" ] && xdg-open /tmp/fetchpkg.log
    fi
}

DisplayUi() {
    Fetch
    PKG=$UPDATE/`sh -c 'apt list --installed' | wc -l`
    if (( $UPDATE > 5 )); then
        clicked=`notify-send --app-name="Package Manager" --category="Package Manager" \
            "Package Manager" "There are $UPDATE updates available." --icon="software-update-available" \
            --action="[ACTION]action"`
        [ "0" = "$clicked" ] && Update
        echo " 󱧘  $PKG "
    else echo "  "
    fi
}

for arg in $@;do
    if   [ "$arg" = "--fetch-only" ] || [ "$arg" = "-f" ]; then
        Service
        exit
    fi
    if   [ "$arg" = "--upgrade" ] || [ "$arg" = "-u" ]; then
        Update
        exit
    fi
done
DisplayUi
